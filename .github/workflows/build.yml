name: "Build"

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"

on:
  push:
    branches:
      - main
      - feat/*
      - bug/*
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  app:
    name: ".NET App"
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./src
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, windows-2022, macos-12 ]

    steps:
      - name: 🚚 Checkout latest
        uses: actions/checkout@v4.1.1

      - name: 🧲 Setup .NET 6
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 6.0.x

      - name: 🧲 Setup .NET 7
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 7.0.x

      - name: 📦 Install dependencies
        run: dotnet restore

      - name: 🔨 Build
        run: dotnet build --no-restore

      - name: 🧐 Test
        run: dotnet test --no-build --verbosity normal

      - name: 🔏 Sign binaries
        if: runner.os == 'Windows'
        run: |
          osslsigncode sign -certs ${{ secrets.SIGN_CERT_PATH }} -key ${{ secrets.SIGN_CERT_PASS }} -in path/to/binary.exe -out path/to/signed_binary.exe
  
  spa:
    name: "SPA App"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/Apps/NetPad.Apps.App/App
    
    strategy:
      matrix:
        node-version: [ 16.x, 18.x, 20.x ]
    
    steps:
      - name: 🚚 Checkout latest
        uses: actions/checkout@v4.1.1

      - name: 🧲 Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.0.1
        with:
          node-version: ${{ matrix.node-version }}

      - name: 📦 Install dependencies
        run: npm install

      - name: 🔨 Build
        run: npm run build

      - name: 🧐 Test
        run: npm test
